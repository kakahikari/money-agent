.ui.header {
  color: mix($reverse_bgc, $bgc, 20);
  font-weight: normal;
}

.ui.dividing.header {
  border-bottom: rgba(mix($reverse_bgc, $bgc, 40), .2) solid 1px;
}

.ui.basic.primary.button {
  &, &.active {
    color: $color0 !important;
    box-shadow: 0px 0px 0px 1px $color0 inset !important;
    border-radius: $globalBorderRadius;
    &:hover,
    &:active {
      color: darken($color0, 20) !important;
      box-shadow: 0px 0px 0px 1px darken($color0, 20) inset !important;
    }
  }
}

.ui.button {
  padding-top: $inputPadding;
  padding-bottom: $inputPadding;
  font-size: $fontSize * 1.2;
  .ui.action.input & {
    position: absolute;
    top: 0;
    display: block;
    width: auto;
    padding-top: $inputPadding;
    padding-bottom: $inputPadding;
    border: transparent solid $inputBorderWidth;
    line-height: 1.2em;
    font-size: $fontSize * 1.1;
    font-weight: normal;
    &.right {
      right: 0;
    }
  }
}

.ui.action.input:not([class*="left action"]) > .dropdown:last-child,
.ui.action.input:not([class*="left action"]) > .button:last-child,
.ui.action.input:not([class*="left action"]) > .buttons:last-child > .button {
  border-radius: 0 $globalBorderRadius $globalBorderRadius 0;
}

.ui.input,
.ui.form {
  font-size: $fontSize * 1.1;
  line-height: 1.2em;
  overflow: hidden;
  .ui.label:not(.corner) {
    font-size: $fontSize * 1.1;
    line-height: 1.2em;
    padding-top: 1em;
    padding-bottom: 1em;
  }
  &.labeled.form-group {
    max-width: 100%;
    overflow: hidden;
  }
}

.ui.label {
  border-radius: $globalBorderRadius;
}

@mixin inputSytle {
  min-height: $inputPadding * 2 + 1em;
  padding-top: $inputPadding;
  padding-bottom: $inputPadding;
  border-width: $inputBorderWidth;
  outline: 0;
  background-color: $inputBGColor;
  border-radius: $globalBorderRadius;
  color: $inputColor;
  appearance: none;
  &:focus {
    color: $inputColor;
    border-radius: $globalBorderRadius;
    border-color: $color0;
    & ~ .ui.button.right {
      border-left-color: $color0;
    }
  }
  &.errors {
    color: #FF6779;
    border-color: #FF6779;
    border-radius: $globalBorderRadius;
    & ~ .ui.button.right {
      border-left-color: #FF6779;
    }
  }
}

input {
  .ui.input &,
  .ui.form & {
    &,
    &:not([type]),
    &[type="date"],
    &[type="datetime-local"],
    &[type="email"],
    &[type="number"],
    &[type="password"],
    &[type="search"],&[type="tel"],
    &[type="time"],
    &[type="text"],
    &[type="file"],
    &[type="url"] {
      @include inputSytle;
    }
  }
}

select.ui.dropdown {
  @include inputSytle;
  height: auto;
  background-image: url(../images/layout/arrow_down.png);
  background-repeat: no-repeat;
  background-position: right .5em top 50%;
  background-size: 1em auto;
}

.ui.selection.dropdown {
  @include inputSytle;
  .text {
  }
  i.icon.dropdown {
    margin-top: -.28em / $inputPadding;
  }
}


.ui.checkbox label,
.ui.checkbox + label,
.ui.checkbox input:focus ~ label {
  color: mix($reverse_bgc, $bgc, 50);
  font-size: .6em;
  line-height: 1.4em;
  a {
    color: $color0;
  }
  &:hover {
    color: mix($reverse_bgc, $bgc, 50);
  }
}




.ui.statistic {
  width: 100%;
}

.value {
  .ui.statistics .statistic > &,
  .ui.statistic > & {
    color: $color0;
  }
  .ui.small.statistics .statistic &,
  .ui.small.statistic & {
    font-size: em(42) !important;
  }
}

.ui.statistics .statistic > .value ~ .label,
.ui.statistic > .value ~ .label {
  margin-top: em(5);
  color: $reverse_bgc;
}


.ui.steps {
  .step {
    border-bottom: lighten($black, 90) dashed 2px;
    &:nth-child(2n+2) {
      background: lighten($black, 98);
    }
    &:last-child {
      border-bottom: 0;
    }
  }
}

.ui.divided.list .item {
  padding-top: 1em;
  padding-bottom: 1em;
  border-top: mix($reverse_bgc, $bgc, 12) dotted 2px;
  &:first-child {
    padding-top: 0;
  }
  .content {
    &.right.floated {
      font-weight: bold;
      color: mix($color0, $bgc, 60);
    }
  }
}

.ui.menu {
  margin: 0 auto 1em;
  width: 100%;
  max-width: 100%;
  font-size: 1em;
}

.ui.pointing.menu {
  width: 100%;
  /* overflow: hidden; */
}

.ui.secondary.pointing.menu {
  position: relative;
  overflow: visible;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: flex-start;
  justify-content: flex-start;
  padding: 0;
  border-bottom-color: transparent;
  @include breakpoint($se + 1) {
    border-bottom-color: mix($reverse_bgc, $bgc, 20);
  }
  &:after {
    display: none;
  }
  a.item {
    padding-left: .6em;
    padding-right: .6em;
    border-bottom-color: mix($reverse_bgc, $bgc, 20);
    &, &.active {
      color: $reverse_bgc;
      &:hover {
        color: $reverse_bgc;
      }
    }
    &.active {
      border-bottom-color: $color0;
      &:hover {
        border-bottom-color: $color0;
      }
    }
  }
}

.ui.middle.aligned.list {
  font-size: em(15);
  color: mix($bgc, $reverse_bgc, 60);
  i.fa {
    width: em(24);
    color: mix($bgc, $reverse_bgc, 90);
    &.fa-check {
      color: $color0;
    }
  }
}
